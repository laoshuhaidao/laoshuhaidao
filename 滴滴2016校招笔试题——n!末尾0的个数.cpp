//考虑哪些组合可以得到10即可，考虑哪些数相乘能得到10，N!= K * 10^M，其中K不能被10整除，则N!末尾有M个0。
//对N!进行质因数分解： N!=2X*3Y*5Z…，
//因为10=2*5，所以M与2和5的个数即X、Z有关。
//每一对2和5都可以得到10，故M=min(X,Z)。因为能被2整除的数出现的频率要比能被5整除的数出现的频率高，所以M=Z。
//其实也很好推出，1-9 中两两相乘，末位有0的话必须要有5，其它的数则是2的倍数。
//由上面的分析可以看出，只要计算处Z的值，就可以得到N!末尾0的个数
//Z =[N/5] + [N/52] + [N/53] + …
//公式中N/5表示不大于N的数中能被5整除的数贡献一个5，N/(5*5)表示不大于N的数中能被25整除的数再贡献一个5.......


//n!末尾0 的个数
#include<iostream>
using namespace std;

int countZero(int N)
{
	int ret = 0;
	while (N)
	{
		ret += N / 5;
		N /= 5;
	}
	return ret;
}

int main() {
	int n;
	cout << "输入一个正整数n: ";
	cin >> n;
	cout << n<<"!末尾0的个数为："<< countZero(n) << endl;
	return 0;
}
